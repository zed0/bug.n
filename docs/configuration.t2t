
%!encoding:       iso-8859-1
%!options(html):  --css-sugar -o configuration.html
%!style(html):    ../styles.css
%!preproc(html):  '%%html: ' ''
%!postproc(html): '<HEAD>'  '<HEAD>\n<TITLE>joten @ AutoHotkey</TITLE>'
%!postproc(html): '<HEAD>'  '<HEAD>\n<LINK REL="icon" HREF="../images/jn.ico" />'
%!postproc(html): '<HEAD>'  '<HEAD>\n<META NAME="author" CONTENT="joten" />'
%!postproc(html): '<HEAD>'  '<HEAD>\n<META NAME="keywords" CONTENT="AutoHotkey, joten, bug.n, tiling, window management" />'
%!postproc(html): '<HEAD>'  '<HEAD>\n<META NAME="description" CONTENT="AutoHotkey scripts by joten" />'
%!postproc(html): '<H1>'    '<H1 ID="bugn">'
%!options(txt):   -o configuration.txt
%!preproc(txt):   '%%txt: ' ''
%!postproc(txt):  '<BR>'    ''

= bug.n/configuration =
------------------------------------------------------------------------

=== bug.n GUI ===

: **Config_showBar**=1
  If false (=0), the bar is hidden. It can be made visible or hidden by hotkey.

: **Config_topBar**=1
  If false (=0), the bar is at the bottom.

: **Config_fontName**=Lucida Console
  A monospace font is preferable for bug.n to calculate the correct width
  of the bar and its elements (sub-windows).

: **Config_fontSize**=8
  Font size in pixel.

: **Config_normBgColor**=f0f0f0;d8d8d8;c0c0c0;a8a8a8;909090;787878;606060;484848;303030;181818
  Normal background colour of bar elements; format: RRGGBB. The ten
  values are needed for indicating the number of windows per view (by
  default: darker colour means more windows) and distinct status
  information.

: **Config_normFgColor**=000000;000000;000000;000000;000000;ffffff;ffffff;ffffff;ffffff;ffffff
  Normal foreground colour of bar elements.

: **Config_selBgColor**=99b4d1;3399ff;ff9933
  Background colour of 'selected' or highlighted bar elements (format:
  RRGGBB). The first colour is used for the layout and command symbol,
  the second for selected tags and dereasing battery level and the third
  color is only used for alarming battery level.

: **Config_selFgColor**=000000;ffffff;000000
  Foreground colour of 'selected' or highlighted bar elements.

: **Config_readinBat**=0
  If true (=1), the system battery status is read in and displayed in
  the status bar. This only makes sense, if you have a system battery
  (notebook).

: **Config_readinCpu**=0
  If true (=1), the current CPU load is read in and displayed in the status bar.

: **Config_readinDate**=1
  If true (=1), the current date is read in (format: "WW, DD. MMM.
  YYYY") and displayed in the status bar.

: **Config_readinTime**=1
  If true (=1), the current time is read in (format: "HH:MM") and
  displayed in the status bar.

: **Config_readinInterval**=30000
  Time in milliseconds after which the above status values are refreshed.

: **Config_addRunCommands**=
  A semicolon separated list of commands, which can be run by AutoHotkey
  (i. e, "Run, <command>"), e. g. "cmd;explorer
  D:\;http://www.autohotkey.com"). Each command will be shown in the
  command GUI under the "Run" item.


=== Windows UI ===

: **Config_bbCompatibility**=0
  If true (=1), bug.n looks for BlackBox components (bbLeanBar, bbSlit
  and SystemBarEx) when calculating the work area. It is assumed that
  the virtual desktop functionality of BlackBox and NOT bug.n is used
  (**=> Hiding and showing windows is detected and acted upon).

: **Config_borderWidth**=0
  If > 0, the window border width is set to the integer value
  Config_borderWidth.

: **Config_borderPadding**=-1
  If >= 0, the window border padding is set to the integer value
  Config_borderPadding (only for Windows >**= Vista).

: **Config_showTaskBar**=0
  If false (=0), the task bar is hidden. It can be made visible or
  hidden by hotkey (see below).

: **Config_showBorder**=1
  If false (=0), the window borders are hidden; therefor windows cannot
  be resized manually by dragging the border, even if using the
  according hotkey.

: **Config_selBorderColor**=
  Border colour of the active window; format: 0x00BBGGRR (e. g.
  "0x006A240A", if empty, the system's window border colour is not
  changed).


=== View / Layout ===

: **Config_viewCount**=9
  The total number of views. This has effects on the displayed groups in
  the bar, and should not be exceeded in the hotkeys below.

: **Config_layoutAxis[1]**=1
  The layout axis: 1 = x, 2 = y; negative values mirror the layout,
  setting the master area to the right / bottom instead of left / top.

: **Config_layoutAxis[2]**=2
  The master axis: 1 = x (from left to right), 2 = y (from top to
  bottom), 3 = z (monocle).

: **Config_layoutAxis[3]**=2
  The stack axis:  1 = x (from left to right), 2 = y (from top to
  bottom), 3 = z (monocle).

: **Config_layoutMFactor**=0.6
  The factor for the size of the master area, which is multiplied by the
  monitor size.


=== Runtime ===

: **Config_mouseFollowsFocus**=1
  If true (=1), the mouse pointer is set over the focused window, if a
  window is activated by bug.n.

: **Config_shellMsgDelay**=350
  The time bug.n waits after a shell message (a window is opened, closed
  or the focus has been changed); if there are any problems recognizing,
  when windows are opened or closed, try to increase this number.

: **Config_viewFollowsTagged**=0
  If true (=1), the view is set to, if a window is tagged with a single
  tag.


=== Rules ===

: **Config_rules[1]**=.*;.*;;1;0;0;0;0;0
  At first you may set a default rule (.*;.*;) for a default monitor,
  view and / or showing window title bars. Format:
  Config_rules[i]=<class (regular expression string)>;<title (regular
  expression string)>;<window style (hexadecimal number or blank)>;<is
  managed (1 = True or 0 = False)>;<monitor (0 <= integer <= total number
  of monitors, 0 means the currently active monitor)>;<tags (binary mask
  as integer >= 0, e. g. 17 for 1 and 5, 0 means the currently active
  tag)>;<is floating (1 = True or 0 = False)>;<is decorated (1 = True or
  0 = False)>;<hide title (1 = True or 0 = False)>" (";" is not allowed
  as a character)

: **Config_rules[2]**=.*;.*;0x80000000;0;0;0;1;1;1
  Pop-up windows (style WS_POPUP=0x80000000) will not be managed, are
  floating and the titles are hidden.

: **Config_rules[3]**=SWT_Window0;.*;;1;0;0;0;0;0
  Windows created by Java (SWT) e. g. Eclipse have the style WS_POPUP,
  but should excluded from the above rule.

: **Config_rules[4]**=Xming;.*;;1;0;0;0;0;0
  Xming windows have the style WS_POPUP, but should be excluded from the
  above rule.

: **Config_rules[5]**=_sp;_sp;;1;0;0;1;0;1
: **Config_rules[6]**=MozillaDialogClass;.*;;1;0;0;1;1;0
: **Config_rules[7]**=MsiDialog(No)?CloseClass;.*;;1;0;0;1;1;0
: **Config_rules[8]**=gdkWindowToplevel;GIMP-Start;;1;0;0;1;1;0
: **Config_rules[9]**=gdkWindowToplevel;GNU Image Manipulation Program;;1;0;0;1;1;0
: **Config_rules[10]**=gdkWindowToplevel;Werkzeugkasten;;1;0;0;1;1;0
: **Config_rules[11]**=gdkWindowToplevel;Ebenen, .* - Pinsel, Muster, .*;;1;0;0;1;1;0
: **Config_rules[12]**=gdkWindowToplevel;Toolbox;;1;0;0;1;1;0
: **Config_rules[13]**=gdkWindowToplevel;Layers, Channels, Paths, .*;;1;0;0;1;1;0

: **Config_rulesCount**=13
  This variable has to be set to the total number of active rules above.


=== Session management ===

: **Config_autoSaveSession**=0
  Automatically save the current state of monitors, views, layouts
  (active view, layout, axes, mfact and msplit) to te session file (set
  below) when quitting bug.n.

: **Config_sessionFilePath**=Session.ini
  The file path, to which the session is saved. This target directory
  must be writable by the user (if only the file name is specified
  without a directory, it will be saved, where "Main.ahk" or the
  executable of bug.n is saved).

''<BR>''
------------------------------------------------------------------------
%%html: © 2010-2011 joten, last modified %%date(%d.%m.%Y) ([View txt2tags source %%infile]) [../images/jn.png]
%%txt: © 2010-2011 joten, last modified %%date(%d.%m.%Y)
