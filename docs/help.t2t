
%!encoding:       iso-8859-1
%!options(html):  --css-sugar -o help.html
%!style(html):    ../styles.css
%!preproc(html):  '%%html: ' ''
%!postproc(html): '<HEAD>'  '<HEAD>\n<TITLE>joten @ AutoHotkey</TITLE>'
%!postproc(html): '<HEAD>'  '<HEAD>\n<LINK REL="icon" HREF="../images/jn.ico" />'
%!postproc(html): '<HEAD>'  '<HEAD>\n<META NAME="author" CONTENT="joten" />'
%!postproc(html): '<HEAD>'  '<HEAD>\n<META NAME="keywords" CONTENT="AutoHotkey, joten, bug.n, tiling, window management" />'
%!postproc(html): '<HEAD>'  '<HEAD>\n<META NAME="description" CONTENT="AutoHotkey scripts by joten" />'
%!postproc(html): '<H1>'    '<H1 ID="bugn">'
%!postproc(html): '">http://www.autohotkey.com/' '" TARGET="_blank">http://www.autohotkey.com/'
%!postproc(html): '%%LINK_configuration' '<A HREF="configuration.html">bug.n/configuration</A>'
%!postproc(html): '%%LINK_hotkeys' '<A HREF="hotkeys.html">bug.n/hotkeys</A>'
%!options(txt):   -o help.txt
%!preproc(txt):   '%%txt: ' ''
%!postproc(txt):  '<BR>'    ''
%!postproc(txt):  '%%LINK_configuration' 'docs/configuration.txt'
%!postproc(txt):  '%%LINK_hotkeys' 'docs/hotkeys.txt'

= bug.n/help =
------------------------------------------------------------------------

bug.n is a tiling window manager for Microsoft Windows.''<BR>''
The advantages of tiling window management over the standard stacking
window management of Microsoft Windows are as follows:
- You do not have to move and resize windows manually by mouse.
- Windows are positioned and sized applying a layout, which utilizes all
  available screen estate.


Additionally bug.n increases the available screen estate by freeing up
the space occupied by
- the Microsoft Windows Taskbar
- the title bar for every single window


by hiding and replacing all with a single slim status bar (but bug.n is
not a shell replacement).

This status bar may show the following:
- system information
  - time
  - date
  - CPU usage
  - battery level
- active window title
- layout
  - []= (tile)
  - [M] (monocle)
  - ><> (floating)
- up to nine views indicating
  - the active view
  - how many windows are tagged with and shown on the view with the same
    number


=== Layouts ===

There are three layouts.
+ **tile**''<BR>''
  A master area for the main window(s) and a stacking area for the rest,
  all windows are shown at any time. This layout can be further changed
  in the following respects:
  - the number of windows in the master area (1 ... all)
  - the stacking direction of the master and stacking area (from left to
    right, from top to bottom or monocle)
  - the position of the master area (left, top, right or bottom)
  - the witdh or height of the master area (depending on its position)
+ **monocle**''<BR>''
  All windows are maximized and only one is shown at any time.
+ **floating**''<BR>''
  Do not tile any window.


=== Tagging ===

bug.n features an extended implementation of virtual desktops:
tagging.''<BR>''
Windows are tagged with one or more numbers, which determine on which
views they are shown. Selecting a view shows the windows tagged with the
same number and hides all other windows.


=== Session Management ===

bug.n features a session management, which is used for saving
configuration variables of bug.n, but not for restoring applications.
The configuration variables may include those listed
in %%LINK_configuration and internal variables for the current state of
bug.n, e. g. the active view (saved for each monitor) and layout (saved
for each view).


== Preliminary note ==

There are two forms in which you can use bug.n:
+ the compiled executable
+ the AutoHotkey script


Depending on which form you choose, the following procedures
(installing, running and customizing) are different. Using the compiled
executable may be easier but is also less flexible for customization.


== Installing and running bug.n ==

There is no installation wizard for bug.n. If you downloaded this
package and unpacked it, it should be in a directory, where you have
read and write access. This is the only requirement for using bug.n (at
least for saving the bug.n session file). Apart from that you may copy
bug.n to any directory.
+ If you choose to use the executable and want to save it to a
  directory, to which you do not have write access, you will have to run
  bug.n with a parameter indicating the file path to the session file
  (<file path to the bug.n executable> <file path to the session file>),
  e. g. "C:\Program Files\bugn\bugn.exe C:\Users\joten\bugn.ini".
+ If you choose to use the AutoHotkey script, you will need a version of
  AutoHotkey (available from http://www.autohotkey.com/download) and a
  file association for AutoHotkey scripts to the AutoHotkey executable
  (*.ahk -> <file path to AutoHotkey.exe>). You will than have to run
  "Main.ahk" from within the "source" directory of bug.n.


=== Microsoft Windows Vista / 7 and UAC ===

If you are using bug.n on Microsoft Windows Vista or 7 you may use
applications, which run with administrator privileges e. g.
administrative tools and therefor are not managed by bug.n. If you want
those applications to be managed, you need to run bug.n with
administrator privileges, too.
+ If you choose to use the executable, you can set the option "Run this
  program as an administrator" on the "Compatiblity" tab, section
  "Privilege level" of the bug.n executable file properties.
+ If you choose to use the AutoHotkey script, you will have to use a
  command script like "run.cmd" provided in the "source" directory of
  bug.n. Please adjust the file pathes in this file depending on your
  working environment and than create a link to the file. In the file
  properties of this link you can set the option "Run this program as an
  administrator" on the "Compatiblity" tab, section "Privilege level".
  You will than have to run bug.n through this link.


== Customization ==

Customization can be done
- with configuration variables for
  - the appearance of the bug.n status bar (font, colour and content)
  - controlling Windows UI elements (border width and colour, hiding
    elements)
  - default values (number of tags, layouts, runtime and session
    management)
  - rules controlling specific windows (i. a. exclusions)
- for hotkeys (the key bindings for the bug.n functions)


%%html: ''<P></P>''
+ If you use the executable, you can not change the hotkeys and not all
  of the configuration variables. The available configuration variables
  are listed in %%LINK_configuration.''<BR>''
  To change these, first create a session file by using the hotkey
  "WIN+S". The file is either saved in the directory you specified with
  the parameter to the executable, or in the same directory where the
  executable is saved. You may than edit the file with a text editor and
  add a new line for each configuration variable with its value (format:
  <variable>=<value>, use no quotation marks, 1 for true and 0 for
  false), e. g. "Config_showBar=0". You will have to quit and run bug.n
  again for the changes to take effect.
+ If you use the AutoHotkey script you can directly edit the file
  "Config.ahk" in the "source" directory of bug.n and reload the script
  with the hotkey "WIN+SHIFT+R". You can additionally use the
  configuration file as described above. Please refer to the
  documentation of AutoHotkey for more information about writing an
  AutoHotkey script, especially
  - http://www.autohotkey.com/docs/Hotkeys.htm
  - http://www.autohotkey.com/docs/Variables.htm


== Usage ==

bug.n is mostly controlled with hotkeys. The available hotkeys are
listed in %%LINK_hotkeys. A list of all functions is available through
the command GUI. For a quick start there are the following hotkeys:
- WIN+Y: Show the command GUI.
- WIN+Space: Show / Hide the Windows Taskbar.
- WIN+SHIFT+Q: Quit bug.n and restore all windows and Windows UI
  elements.


The following functions can also be controlled with the mouse:
- With a click on a tag (a number on the left end of the status bar) you
  can change the view and show only the windows associated with that tag.
- With a right-click on a tag you can tag the active window with that
  tag.
- With a click on the layout symbol in the status bar you can toggle the
  layout to the last used.
- With a right-click on the layout symbol you can set the layout to the
  next in the list.
- A function can be selected from a list in the command GUI, which is
  accessible by cklickig on "#!" on the right end of the status bar.

''<BR>''
------------------------------------------------------------------------
%%html: © 2010-2011 joten, last modified %%date(%d.%m.%Y) ([View txt2tags source %%infile]) [../images/jn.png]
%%txt: © 2010-2011 joten, last modified %%date(%d.%m.%Y)
